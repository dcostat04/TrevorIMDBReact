{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","MovieThumb","clickable","pathname","movieId","movieName","src","alt","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7e3173.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"rmdb-header\">\r\n        <div className=\"rmdb-header-content\">\r\n          \r\n        <Link to=\"/\">\r\n        <a><h1>TrevorIMDBReact</h1></a>\r\n        </Link>\r\n        \r\n        </div>\r\n        \r\n     </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'e1350b1a5d976ad5dc526c0d268c9fc6';\r\n//const API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n          style={{\r\n              background:\r\n              `linear-gradient(to bottom, rgba(0,0,0,0)\r\n              39%,rgba(0,0,0,0)\r\n              41%,rgba(0,0,0,0.65)\r\n              100%),\r\n              url('${props.image}'), #1c1c1c`\r\n          }}\r\n        >\r\n         <div className=\"rmdb-heroimage-content\">\r\n            <div className=\"rmdb-heroimage-text\">\r\n            <h1>{props.title}</h1>\r\n            <p>{props.text}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component }  from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({value: event.target.value })\r\n        clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout( () => {\r\n        this.props.callback(this.state.value);\r\n    }, 500)\r\n}  \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                        <input\r\n                         type=\"text\"\r\n                            className=\"rmdb-searchbar-input\"\r\n                             placeholder=\"Search\"\r\n                             onChange={this.doSearch}\r\n                             value={this.state.value}\r\n                         /> \r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map( (element, i) => {\r\n      return (\r\n       <div key={i} className=\"rmdb-grid-element\">\r\n        {element}\r\n        </div>\r\n      )\r\n    })\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n    {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n        <div className=\"rmdb-grid-content\">\r\n         {renderElements()}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n     <div className=\"rmdb-moviethumb\">\r\n     {props.clickable ?\r\n     <Link to={{pathname: `/${props.movieId}`, movieName: `${props.movieName}`}}>\r\n            <img src={props.image} alt=\"moviethumb\" />\r\n         </Link>\r\n         :\r\n         <img src={props.image} alt=\"moviethumb\" />  \r\n     }\r\n     </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\nimage:  PropTypes.string,\r\nmovieId: PropTypes.number,\r\nmovieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n          <p>{props.text}</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL,POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\nstate = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n    }\r\n\r\ncomponentDidMount(){\r\n    if (localStorage.getItem('HomeState')) {\r\n        const state = JSON.parse(localStorage.getItem('HomeState'));\r\n        this.setState({ ...state});\r\n    } else {\r\n    this.setState({ loading: true });\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    this.fetchItems(endpoint);\r\n    }\r\n}\r\n\r\nsearchItems = (searchTerm) => {\r\nlet endpoint = '';\r\nthis.setState({\r\n    movies: [],\r\n    loading: true,\r\n    searchTerm\r\n})\r\n\r\n    if(searchTerm  === ''){\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n}\r\n\r\nloadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if(this.state.searchTerm === ''){\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n    } else {\r\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n}\r\n\r\nfetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...result.results],\r\n            heroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages\r\n        }, ()=> {\r\n            if(this.state.searchTerm === \"\"){\r\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            }\r\n        })\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n}\r\n\r\n    render() {\r\n         return (\r\n             <div className=\"rmdb-home\">\r\n             {this.state.heroImage ?\r\n                <div>\r\n                        <HeroImage\r\n                         image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                         title={this.state.heroImage.original_title}\r\n                         text={this.state.heroImage.overview}\r\n                         />\r\n                     <SearchBar callback={this.searchItems} />\r\n                    </div> : null}\r\n                    <div className=\"rmdb-home-grid\">\r\n                      <FourColGrid\r\n                      header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                      loading={this.state.loading}\r\n                      >\r\n                      {this.state.movies.map ( (element, i) => {\r\n                          return <MovieThumb\r\n                                  key={i}\r\n                                  clickable={true}\r\n                                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                  movieId={element.id}\r\n                                  movieName={element.original_title}\r\n                                  />\r\n                                })}           \r\n                      </FourColGrid>\r\n                      {this.state.loading ? <Spinner /> : null}\r\n                      {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n                      <LoadMoreBtn text=\"Extend\" onClick={this.loadMoreItems} />\r\n                      : null }\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n    <div className=\"rmdb-navigation\">\r\n     <div className=\"rmdb-navigation-content\">\r\n       <Link to=\"/\">\r\n       <p>Home</p>\r\n       </Link>\r\n       <p>/</p>\r\n       <p>{props.movie}</p>\r\n     </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n      <div className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n      >\r\n        <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n        <MovieThumb\r\n           image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n           clickable={false}\r\n           />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n        <h1>{props.movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{props.movie.overview}</p>\r\n        <h3>IMDB RATING</h3>\r\n        <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n      </div>\r\n      {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3> }\r\n      {props.directors.map( (element, i) => {\r\n        return <p  key={i} className=\"rmdb-director\">{element.name}</p>\r\n      })}\r\n    </div>\r\n    <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n}\r\n\r\n// Convert a number to $ format\r\nexport const convertMoney = (money) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'INR',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n}","import React from 'react'; \r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>       \r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n             </div>\r\n             <div className=\"rmdb-movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n               <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n             </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n            src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${props.actor.profile_path}` : './images/no_image.jpg'}\r\n            alt=\"actorthumb\"\r\n       />\r\n       <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n       <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, {Component} from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (localStorage.getItem(`${this.props.match.params.movieId}`)){\r\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n            this.setState({ ...state});\r\n        } else {\r\n        this.setState({ loading: true })\r\n        // First fetch the movie...\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n        }\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n         //  console.log\r\n            if (result.status_code){\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ movie: result }, () => {\r\n                // ... then fetch actors in the setState callback function\r\n                const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n               fetch(endpoint)\r\n               .then(result => result.json())\r\n               .then(result => {\r\n                   const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n              \r\n              this.setState({\r\n                 actors: result.cast,\r\n                 directors,\r\n                 loading: false\r\n              }, () => {\r\n                  localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n              })\r\n             })\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName}/>\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} /> \r\n                    </div>\r\n                : null}\r\n                {this.state.actors ? \r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {this.state.actors.map( (element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                             })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                    : null }\r\n                    {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                    {this.state.loading ? <Spinner /> : null}\r\n                </div>\r\n                )\r\n                           \r\n         }\r\n    }\r\n\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Whoops.  This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n   return (\r\n    <BrowserRouter basename=\"/TrevorIMDBReact\">\r\n       <React.Fragment>\r\n           <Header />\r\n           <Switch>\r\n             <Route path=\"/\" component={Home} exact />\r\n             <Route path=\"/:movieId\" component={Movie} exact />\r\n             <Route component={NotFound} />\r\n           </Switch>\r\n       </React.Fragment>\r\n       </BrowserRouter>\r\n   ) \r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}